"use strict";
Object.defineProperty(window, "fragment", {
    get: function get() {
        var fragment = getFragment();
        return fragment;
    },
    set: function set(fragment) {
        var silently = false;
        setFragment(fragment, silently);
    }
});
window.addEventListener("hashchange", hashChangeListener);
var fragmentChangeHandlers = [];
function getFragment() {
    var hash = window.location.hash.substr(1), fragment = new String(hash); ///
    Object.assign(fragment, {
        getFragment: getFragment,
        setFragment: setFragment,
        onFragmentChange: onFragmentChange,
        offFragmentChange: offFragmentChange
    });
    return fragment;
}
function setFragment(fragment) {
    var silently = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
    var hash = fragment; ///
    if (silently) {
        window.removeEventListener("hashchange", hashChangeListener);
    }
    window.location.hash = hash;
    if (silently) {
        setTimeout(function() {
            window.addEventListener("hashchange", hashChangeListener);
        }, 0);
    }
}
function onFragmentChange(fragmentChangeHandler) {
    fragmentChangeHandlers.push(fragmentChangeHandler);
}
function offFragmentChange(fragmentChangeHandler) {
    var index = fragmentChangeHandlers.indexOf(fragmentChangeHandler);
    if (index > -1) {
        var start = index, deleteCount = 1;
        fragmentChangeHandlers.splice(start, deleteCount);
    }
}
function hashChangeListener() {
    var hash = window.location.hash.substr(1), fragment = hash; ///
    fragmentChangeHandlers.forEach(function(fragmentChangeHandler) {
        fragmentChangeHandler(fragment);
    });
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9mcmFnbWVudGVkLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkod2luZG93LCBcImZyYWdtZW50XCIsIHtcbiAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICBjb25zdCBmcmFnbWVudCA9IGdldEZyYWdtZW50KCk7XG5cbiAgICByZXR1cm4gZnJhZ21lbnQ7XG4gIH0sXG5cbiAgc2V0OiBmdW5jdGlvbihmcmFnbWVudCkge1xuICAgIGNvbnN0IHNpbGVudGx5ID0gZmFsc2U7XG5cbiAgICBzZXRGcmFnbWVudChmcmFnbWVudCwgc2lsZW50bHkpO1xuICB9XG59KTtcblxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJoYXNoY2hhbmdlXCIsIGhhc2hDaGFuZ2VMaXN0ZW5lcik7XG5cbmNvbnN0IGZyYWdtZW50Q2hhbmdlSGFuZGxlcnMgPSBbXTtcblxuZnVuY3Rpb24gZ2V0RnJhZ21lbnQoKSB7XG4gIGNvbnN0IGhhc2ggPSB3aW5kb3cubG9jYXRpb24uaGFzaC5zdWJzdHIoMSksICAvLy9cbiAgICAgICAgZnJhZ21lbnQgPSBuZXcgU3RyaW5nKGhhc2gpOyAgLy8vXG5cbiAgT2JqZWN0LmFzc2lnbihmcmFnbWVudCwge1xuICAgIGdldEZyYWdtZW50LFxuICAgIHNldEZyYWdtZW50LFxuICAgIG9uRnJhZ21lbnRDaGFuZ2UsXG4gICAgb2ZmRnJhZ21lbnRDaGFuZ2VcbiAgfSk7XG5cbiAgcmV0dXJuIGZyYWdtZW50O1xufVxuXG5mdW5jdGlvbiBzZXRGcmFnbWVudChmcmFnbWVudCwgc2lsZW50bHkgPSB0cnVlKSB7XG4gIGNvbnN0IGhhc2ggPSBmcmFnbWVudDsgIC8vL1xuXG4gIGlmIChzaWxlbnRseSkge1xuICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwiaGFzaGNoYW5nZVwiLCBoYXNoQ2hhbmdlTGlzdGVuZXIpO1xuICB9XG5cbiAgd2luZG93LmxvY2F0aW9uLmhhc2ggPSBoYXNoO1xuXG4gIGlmIChzaWxlbnRseSkge1xuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJoYXNoY2hhbmdlXCIsIGhhc2hDaGFuZ2VMaXN0ZW5lcik7XG4gICAgfSwgMCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gb25GcmFnbWVudENoYW5nZShmcmFnbWVudENoYW5nZUhhbmRsZXIpIHtcbiAgZnJhZ21lbnRDaGFuZ2VIYW5kbGVycy5wdXNoKGZyYWdtZW50Q2hhbmdlSGFuZGxlcik7XG59XG5cbmZ1bmN0aW9uIG9mZkZyYWdtZW50Q2hhbmdlKGZyYWdtZW50Q2hhbmdlSGFuZGxlcikge1xuICBjb25zdCBpbmRleCA9IGZyYWdtZW50Q2hhbmdlSGFuZGxlcnMuaW5kZXhPZihmcmFnbWVudENoYW5nZUhhbmRsZXIpO1xuXG4gIGlmIChpbmRleCA+IC0xKSB7XG4gICAgY29uc3Qgc3RhcnQgPSBpbmRleCwgIC8vL1xuICAgICAgICAgIGRlbGV0ZUNvdW50ID0gMTtcblxuICAgIGZyYWdtZW50Q2hhbmdlSGFuZGxlcnMuc3BsaWNlKHN0YXJ0LCBkZWxldGVDb3VudCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gaGFzaENoYW5nZUxpc3RlbmVyKCkge1xuICBjb25zdCBoYXNoID0gd2luZG93LmxvY2F0aW9uLmhhc2guc3Vic3RyKDEpLCAgLy8vXG4gICAgICAgIGZyYWdtZW50ID0gaGFzaDsgIC8vL1xuXG4gIGZyYWdtZW50Q2hhbmdlSGFuZGxlcnMuZm9yRWFjaCgoZnJhZ21lbnRDaGFuZ2VIYW5kbGVyKSA9PiB7XG4gICAgZnJhZ21lbnRDaGFuZ2VIYW5kbGVyKGZyYWdtZW50KTtcbiAgfSk7XG59XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJ3aW5kb3ciLCJnZXQiLCJmcmFnbWVudCIsImdldEZyYWdtZW50Iiwic2V0Iiwic2lsZW50bHkiLCJzZXRGcmFnbWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJoYXNoQ2hhbmdlTGlzdGVuZXIiLCJmcmFnbWVudENoYW5nZUhhbmRsZXJzIiwiaGFzaCIsImxvY2F0aW9uIiwic3Vic3RyIiwiU3RyaW5nIiwiYXNzaWduIiwib25GcmFnbWVudENoYW5nZSIsIm9mZkZyYWdtZW50Q2hhbmdlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInNldFRpbWVvdXQiLCJmcmFnbWVudENoYW5nZUhhbmRsZXIiLCJwdXNoIiwiaW5kZXgiLCJpbmRleE9mIiwic3RhcnQiLCJkZWxldGVDb3VudCIsInNwbGljZSIsImZvckVhY2giXSwibWFwcGluZ3MiOiJBQUFBLFlBQVksQ0FBQztBQUViQSxNQUFNLENBQUNDLGNBQWMsQ0FBQ0MsTUFBTSxFQUFFLFVBQVUsRUFBRTtJQUN4Q0MsR0FBRyxFQUFFLFNBQUxBLEdBQUcsR0FBYTtRQUNkLElBQU1DLFFBQVEsR0FBR0MsV0FBVyxFQUFFLEFBQUM7UUFFL0IsT0FBT0QsUUFBUSxDQUFDO0lBQ2xCLENBQUM7SUFFREUsR0FBRyxFQUFFLFNBQUxBLEdBQUcsQ0FBV0YsUUFBUSxFQUFFO1FBQ3RCLElBQU1HLFFBQVEsR0FBRyxLQUFLLEFBQUM7UUFFdkJDLFdBQVcsQ0FBQ0osUUFBUSxFQUFFRyxRQUFRLENBQUMsQ0FBQztJQUNsQyxDQUFDO0NBQ0YsQ0FBQyxDQUFDO0FBRUhMLE1BQU0sQ0FBQ08sZ0JBQWdCLENBQUMsWUFBWSxFQUFFQyxrQkFBa0IsQ0FBQyxDQUFDO0FBRTFELElBQU1DLHNCQUFzQixHQUFHLEVBQUUsQUFBQztBQUVsQyxTQUFTTixXQUFXLEdBQUc7SUFDckIsSUFBTU8sSUFBSSxHQUFHVixNQUFNLENBQUNXLFFBQVEsQ0FBQ0QsSUFBSSxDQUFDRSxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQ3JDVixRQUFRLEdBQUcsSUFBSVcsTUFBTSxDQUFDSCxJQUFJLENBQUMsQUFBQyxFQUFFLEdBQUc7SUFFdkNaLE1BQU0sQ0FBQ2dCLE1BQU0sQ0FBQ1osUUFBUSxFQUFFO1FBQ3RCQyxXQUFXLEVBQVhBLFdBQVc7UUFDWEcsV0FBVyxFQUFYQSxXQUFXO1FBQ1hTLGdCQUFnQixFQUFoQkEsZ0JBQWdCO1FBQ2hCQyxpQkFBaUIsRUFBakJBLGlCQUFpQjtLQUNsQixDQUFDLENBQUM7SUFFSCxPQUFPZCxRQUFRLENBQUM7QUFDbEIsQ0FBQztBQUVELFNBQVNJLFdBQVcsQ0FBQ0osUUFBUSxFQUFtQjtRQUFqQkcsUUFBUSxHQUFSQSwrQ0FBZSxrQkFBSixJQUFJO0lBQzVDLElBQU1LLElBQUksR0FBR1IsUUFBUSxBQUFDLEVBQUUsR0FBRztJQUUzQixJQUFJRyxRQUFRLEVBQUU7UUFDWkwsTUFBTSxDQUFDaUIsbUJBQW1CLENBQUMsWUFBWSxFQUFFVCxrQkFBa0IsQ0FBQyxDQUFDO0lBQy9ELENBQUM7SUFFRFIsTUFBTSxDQUFDVyxRQUFRLENBQUNELElBQUksR0FBR0EsSUFBSSxDQUFDO0lBRTVCLElBQUlMLFFBQVEsRUFBRTtRQUNaYSxVQUFVLENBQUMsV0FBTTtZQUNmbEIsTUFBTSxDQUFDTyxnQkFBZ0IsQ0FBQyxZQUFZLEVBQUVDLGtCQUFrQixDQUFDLENBQUM7UUFDNUQsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ1IsQ0FBQztBQUNILENBQUM7QUFFRCxTQUFTTyxnQkFBZ0IsQ0FBQ0kscUJBQXFCLEVBQUU7SUFDL0NWLHNCQUFzQixDQUFDVyxJQUFJLENBQUNELHFCQUFxQixDQUFDLENBQUM7QUFDckQsQ0FBQztBQUVELFNBQVNILGlCQUFpQixDQUFDRyxxQkFBcUIsRUFBRTtJQUNoRCxJQUFNRSxLQUFLLEdBQUdaLHNCQUFzQixDQUFDYSxPQUFPLENBQUNILHFCQUFxQixDQUFDLEFBQUM7SUFFcEUsSUFBSUUsS0FBSyxHQUFHLENBQUMsQ0FBQyxFQUFFO1FBQ2QsSUFBTUUsS0FBSyxHQUFHRixLQUFLLEVBQ2JHLFdBQVcsR0FBRyxDQUFDLEFBQUM7UUFFdEJmLHNCQUFzQixDQUFDZ0IsTUFBTSxDQUFDRixLQUFLLEVBQUVDLFdBQVcsQ0FBQyxDQUFDO0lBQ3BELENBQUM7QUFDSCxDQUFDO0FBRUQsU0FBU2hCLGtCQUFrQixHQUFHO0lBQzVCLElBQU1FLElBQUksR0FBR1YsTUFBTSxDQUFDVyxRQUFRLENBQUNELElBQUksQ0FBQ0UsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUNyQ1YsUUFBUSxHQUFHUSxJQUFJLEFBQUMsRUFBRSxHQUFHO0lBRTNCRCxzQkFBc0IsQ0FBQ2lCLE9BQU8sQ0FBQyxTQUFDUCxxQkFBcUIsRUFBSztRQUN4REEscUJBQXFCLENBQUNqQixRQUFRLENBQUMsQ0FBQztJQUNsQyxDQUFDLENBQUMsQ0FBQztBQUNMLENBQUMifQ==